#!/usr/bin/env node

var uuid = require('uuid');
var Bleacon = require('bleacon');
var optimist = require('optimist');

var argv = optimist
  .usage('iBeacon command line utility')
  .describe('h', 'Displays this message')
  .alias('h', 'help')
  .describe('v', 'Displayes the version')
  .alias('v', 'version')
  .describe('s', 'Scan for iBeacons')
  .alias('s', 'scan')
  .describe('b', 'Broadcast as an iBeacon')
  .alias('b', 'broadcast')
  .describe('u', 'Proximity UUID')
  .alias('u', 'uuid')
  .describe('M', 'Major Identifier')
  .alias('M', 'major')
  .describe('m', 'Minor Identifier')
  .alias('m', 'minor')
  .describe('p', 'Advertised Power')
  .alias('p', 'power')
  .default('p', -32)
  .argv;

if (argv.help) {
  console.log(optimist.help());
  return;
}

if (argv.version) {
  // TODO get version from package.json
  console.log('iBeacon version 0.0.1');
  return;
}

if (argv.broadcast) {
  var uuid = argv.uuid ? argv.uuid : uuid.v4();
  var major = argv.major ? argv.major : 1;
  var minor = argv.minor ? argv.minor : 0;
  var measuredPower = argv.power;

  console.log('Starting broadcast with uuid: ' + uuid + ' major: '
  	+ major + ' minor: ' + minor + ' power: ' + measuredPower);

  Bleacon.startAdvertising(uuid, major, minor, measuredPower);
}

if (argv.scan) {
  var uuid = argv.uuid;
  var major = argv.major;
  var minor = argv.minor;

  if (uuid && major && minor) {
    console.log('Starting scan for uuid: ' + uuid + ' major: '
      + major + ' minor: ' + minor);
    Bleacon.startScanning(uuid, major, minor);
  } else if(uuid && major) {
    console.log('Starting scan for uuid: ' + uuid + ' major: '
      + major);
    Bleacon.startScanning(uuid, major);
  } else if(uuid) {
    console.log('Starting scan for uuid: ' + uuid);
    Bleacon.startScanning(uuid, major);
  } else {
    console.log('Starting scan');
    Bleacon.startScanning();
  }
}